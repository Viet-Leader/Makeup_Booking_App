package com.example.bookingmakeup.Controllers;

import com.example.bookingmakeup.Models.Account;
import com.example.bookingmakeup.Models.MakeupArtist;
import com.example.bookingmakeup.Services.IAccountService;
import jakarta.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.Collections;
import java.util.List;
@Controller
@RequestMapping("/manager")
public class ManagerController {
    @Autowired
    private IAccountService accountService;
    @GetMapping("/index")
    public String indexPage() {
        return "manager/index";
    }
    @GetMapping("/appointment")
    public String appointmentPage() {
        return "manager/appointment";
    }
    @GetMapping("/staff")
    public String staffPage() {
        return "manager/staff";
    }

    @GetMapping("/infor")
    public String getManagerInfor(Model model, HttpSession session) {
        // üîç L·∫•y userId t·ª´ session
        Long userId = (Long) session.getAttribute("userId");
        System.out.println("üîç DEBUG - userId trong session: " + userId);

        if (userId == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y userId, chuy·ªÉn v·ªÅ login!");
            return "redirect:/login"; // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, y√™u c·∫ßu ƒëƒÉng nh·∫≠p l·∫°i
        }

        // ‚úÖ T√¨m ki·∫øm t√†i kho·∫£n theo userId
        Account loggedInAccount = accountService.findById(userId).orElse(null);
        System.out.println("‚úÖ DEBUG - T√†i kho·∫£n t√¨m th·∫•y: " + loggedInAccount);

        if (loggedInAccount == null) {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n v·ªõi userId = " + userId);
            return "redirect:/login"; // N·∫øu t√†i kho·∫£n kh√¥ng t·ªìn t·∫°i, quay v·ªÅ login
        }

        model.addAttribute("loggedInAccount", loggedInAccount);
        return "manager/infor";
    }

    // ‚úÖ X·ª≠ l√Ω c·∫≠p nh·∫≠t t√†i kho·∫£n
    @PostMapping("/updateAccount")
    public String updateAccount(@RequestParam Long userId,
                                @RequestParam String nameAccount,
                                @RequestParam String phone,
                                @RequestParam String address) {
        Account account = accountService.findById(userId).orElse(null);
        if (account == null) {
            return "redirect:/manager/infor"; // Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n
        }

        account.setNameAccount(nameAccount);
        account.setPhone(phone);
        account.setAddress(address);
        accountService.update(account); // C·∫≠p nh·∫≠t t√†i kho·∫£n

        return "redirect:/manager/infor?success=true"; // Quay l·∫°i trang v·ªõi th√¥ng b√°o th√†nh c√¥ng
    }
}
